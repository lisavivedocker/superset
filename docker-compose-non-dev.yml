#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image apache/superset:${TAG:-latest-dev}
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file: docker/.env-non-dev
    image: postgres:10
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false



  mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      - "ACCEPT_EULA=Y"
      - "SA_PASSWORD=Projet1!"
    ports:
      - "1433:1433"
    hostname: mssql
    volumes:
      - "mssql-2017-data:/var/opt/mssql"
    networks: 
      - "learndb_net"
  webapp:    
    build: app/.
    environment:
#      - "CONNSTR=DRIVER={ODBC Driver 17 for SQL Server};SERVER=mssql,1433;DATABASE=master;UID=sa;PWD=SU2orange!"
#      - "Driver={ODBC Driver 13 for SQL Server};SERVER=tcp:servertom.database.windows.net,1433;DATABASE=bdTom;UID=Tom;Pwd=Projet1!"
      - "FLASK_APP=app.py"
      - "FLASK_ENV=development"
      - "SCHEMA_PATH=/app/schemas"
      - "SQL_CLIENT_HOST=servertom.database.windows.net"
      - "SQL_CLIENT_PORT=1433"
      - "SQL_CLIENT_USER=Tom"
      - "SQL_CLIENT_PASS=Projet1!"
      - "SQL_CLIENT_CMD=/opt/mssql-tools/bin/sqlcmd"
      - "RANDOM_SEED=0"
    ports: 
      - "5000:5000"
    links:
      - mssql
    volumes:
      - "./app/:/app/" # for now
      - "./schemas:/app/schemas"
    networks: 
      - "learndb_net"
  adminer:
    build: adminer/.
    ports:
      - "5002:8080"
    links:
      - mssql
    networks:
      - "learndb_net"

#  superset:
#    build: superset/.
#    links:
#      - mssql
#    ports:
#      - "5088:8088"
#  omnidb:
#    image: t4skforce/omnidb:latest
#    links:
#      - mssql
#    ports:
#      - "5080:8000"
#      - "25482:25482"
volumes:
    mssql-2017-data:
    
networks:
  learndb_net:
    driver: bridge
